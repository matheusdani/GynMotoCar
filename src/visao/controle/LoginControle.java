package visao.controle;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.control.Button;
import javafx.scene.control.Control;
import javafx.scene.control.TextField;
import java.awt.JobAttributes.DialogType;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.management.Notification;
import javax.swing.JOptionPane;
//import org.controlsfx.control.Notifications;
import application.Main;
import modelo.dominio.Usuario;
import javafx.animation.RotateTransition;
import javafx.event.ActionEvent;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.Hyperlink;
import javafx.scene.layout.Pane;
import javafx.util.Duration;
import negocio.LoginNegocio;

public class LoginControle implements Initializable{
	@FXML
	private Pane paneLogin;
	@FXML
	private Label lbLogin;
	@FXML
	private TextField txtLogin;
	@FXML
	private Label lbSenha;
	@FXML
	private PasswordField pswSenha;
	@FXML
	private Button btnLimpar;
	@FXML
	private Button btnEntrar;
	@FXML
	private Hyperlink hplCadastro;
	@FXML
	private Hyperlink hplEsqueciSenha;
	@FXML
	
	LoginNegocio loginNeg = new LoginNegocio();
	Main main = null;
	
	@FXML
	public void logar(ActionEvent event) {
		Usuario user = new Usuario();
		String salvo = "salvo";
		
		user.setLogin(txtLogin.getText());
		user.setSenha(pswSenha.getText());
		
		salvo = ValidarCampos();
		
		salvo = loginNeg.fazerLogin(user);
		if(salvo.equals("salvo")){
			
			if(user.getSenha().equals(user)){	
				
				URL arquivoFXML;
				arquivoFXML = getClass().getResource("/visao/telas/Busca.fxml");
				
				Parent fxmlParent = null;
				try {
					fxmlParent = (Parent) FXMLLoader.load(arquivoFXML);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				paneLogin.getChildren().clear();
				paneLogin.getChildren().add(fxmlParent);

			}else{
				salvo = "Usuário ou senha incorretos!";
				System.out.println("" + salvo);
			}
			
		}
		limparCampos();
		
	}
	@FXML
	public void limparCampos() {
		txtLogin.setText("");
		pswSenha.setText("");
		txtLogin.requestFocus();
	}

	// Event Listener on Hyperlink[#hplCadastro].onAction
	@FXML
	public void criarCadastro(ActionEvent event) {
		
		URL arquivoFXML;
		arquivoFXML = getClass().getResource("/visao/telas/Pessoa.fxml");
		
		Parent fxmlParent = null;
		try {
			fxmlParent = (Parent) FXMLLoader.load(arquivoFXML);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		paneLogin.getChildren().clear();
		paneLogin.getChildren().add(fxmlParent);
		
	}
	// Event Listener on Hyperlink[#hplEsqueciSenha].onAction
	@FXML
	public void esqueciSenha(ActionEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub
		
	}
	@FXML
	public String ValidarCampos() {

		String login =  txtLogin.getText();
		String senha = pswSenha.getText();
		
		List<Control>  controls = new ArrayList<>();
		StringBuilder sb = new StringBuilder();
		sb.append("");
		
		if(login.equals("") || login == null){
			sb.append("O Login não pode estar vazio!. \n");
			controls.add(txtLogin);
		}
		if(senha.equals("") || senha == null){
			sb.append("A Senha não pode estar vazio!. \n");
			controls.add(pswSenha);
		}
	
		if(!sb.equals("")) {
			JOptionPane.show(sb.toString());
			animaCamposValidados(controls);
		}

		String salvo = "salvo";
		return salvo;

	}
	@FXML
	public void animaCamposValidados(List<Control> controls) {
		controls.forEach(control -> {
			RotateTransition rotateTransition = new RotateTransition(Duration.millis(60), control);
			rotateTransition.setFromAngle(-4);
			rotateTransition.setToAngle(4);
			rotateTransition.setCycleCount(8);
			rotateTransition.setAutoReverse(true);
			rotateTransition.setOnFinished((ActionEvent event1) ->{
				control.setRotate(0);
			});
			rotateTransition.play();
		});
		if(!controls.isEmpty()){
			controls.get(0).requestFocus();

		}
	}
	
	public void exibeMensagem(String msg){				
		
/*		Notifications.create()
		.text(String.valueOf(msg))
		.owner(main)
		.hideAfter(Duration.seconds(3))
		.darkStyle()
		.position(Pos.TOP_RIGHT)
		.showInformation();
*/
	}

}
