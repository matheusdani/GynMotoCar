package visao.controle;

import javafx.fxml.FXML;

import javafx.scene.control.Button;
import javafx.scene.control.TextField;

import java.sql.SQLException;
import java.util.List;

import Dao.AnuncioDao;

import application.Main;
import javafx.animation.RotateTransition;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;
import javafx.scene.control.Control;
import javafx.scene.layout.Pane;
import javafx.util.Duration;
import modelo.dominio.Anuncio;
import modelo.dominio.Veiculos;
import negocio.AnuncioNegocio;

public class AnuncioControle {
	@FXML
	private Pane paneInserirAnun;
	@FXML
	private Label lbanuncio;
	@FXML
	private Label lbdescricao;
	@FXML
	private TextField txtdescricao;
	@FXML
	private Label lbmodelo;
	@FXML
	private TextField txtmodelo;
	@FXML
	private Label lbmarca;
	@FXML
	private TextField txtmarca;
	@FXML
	private Label lbtipo;
	@FXML
	private TextField txttipo;
	@FXML
	private Label lbpotencia;
	@FXML
	private TextField txtpotencia;
	@FXML
	private Label lbvalor;
	@FXML
	private TextField txtvalor;
	@FXML
	private Label lbcombustivel;
	@FXML
	private ComboBox<Veiculos> cbocombustivel;
	@FXML
	private Label lbano;
	@FXML
	private ComboBox<Veiculos> cboano;
	@FXML
	private Label lbcor;
	@FXML
	private ComboBox<Veiculos> cbocor;
	@FXML
	private Label lbmensagem;
	@FXML
	private TextField txtmensagem;
	@FXML
	private Button btnLimpar;
	@FXML
	private Button btnSalvar;
	@FXML
	
	Anuncio anuncio = new Anuncio();
	Veiculos veiculos = new Veiculos();
	AnuncioNegocio anuncioNegocio = new AnuncioNegocio();
	AnuncioDao anuncioDao = new AnuncioDao();
	Main main = null;
	
	@FXML
	public void limparInserir(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnSalvar].onAction
	@FXML
	public void salvarAnuncio(ActionEvent event) throws SQLException {

		boolean validacao = false;
	//	pegarValores(anuncio);
	//	validacao = validarCampos();
		if(validacao) {
			if (anuncio.getId() == 0) {
				String validar = anuncioNegocio.salvar(anuncio);
				if(validar.equals("salvo")) {
					String msg = "Usuário inserido!";
					System.out.println(msg);
			//		limparCadastro();
				}else{
					System.out.println(validar);
				}
			} 
		}

	}
	

	
	
//	private void pegarValores(Anuncio anuncio) {

/*		anuncio.setDescricao(txtdescricao.getText());
		anuncio.setMensagem(txtmensagem.getText());
		anuncio.setValor(txtvalor.getText());
		
		veiculos.setModelo(txtmodelo.getText());
		veiculos.setMarca(txtmarca.getText());
		veiculos.setTipo(txttipo.getText());
		veiculos.setPotencia(txtpotencia.getText());
		veiculos.setCombustivel(cbocombustivel);
		veiculos.setAno(cboano);
		veiculos.setCor(cbocor);
	
	}
	
	
	public boolean validarCampos(){

		String descricao = txtdescricao.getText();
		String mesngagem = txtmensagem.getText();
		String valor = txtvalor.getText();
		
		String senha = txtSenha.getText();
		
		List<Control>  controls = new ArrayList<>();
		StringBuilder sb = new StringBuilder();
		sb.append("");
		if(nome.equals("") || nome == null){
			sb.append("O nome não pode estar vazio!. \n");
			controls.add(txtNome);
		}
		if(cpf.equals("") || cpf == null){
			sb.append("O CPF não pode estar vazio!. \n");
			controls.add(txtCPF);
		}
	
		if(email.equals("") || email == null){
			sb.append("O E-mail não pode estar vazio!. \n");
			controls.add(txtEmail);
		}
		if(senha.equals("") || senha == null){
			sb.append("A senha não pode estar vazia!. \n");
			controls.add(txtSenha);
		}
	
		if(!sb.equals("")) {
			System.out.println(sb.toString());
			animaCamposValidados(controls);
		}

		return sb.toString().isEmpty();
	}
	
	public void limparCadastro() {

		txt.setText("");
		txtCPF.setText("");
		txtEndereco.setText("");
		txtTelefone.setText("");
		txtEmail.setText("");
		txtSenha.setText("");
		txtNome.requestFocus();
	}
*/
	public void animaCamposValidados(List<Control> controls) {
		controls.forEach(control -> {
			RotateTransition rotateTransition = new RotateTransition(Duration.millis(60), control);
			rotateTransition.setFromAngle(-4);
			rotateTransition.setToAngle(4);
			rotateTransition.setCycleCount(8);
			rotateTransition.setAutoReverse(true);
			rotateTransition.setOnFinished((ActionEvent event1) ->{
				control.setRotate(0);
			});
			rotateTransition.play();
		});
		if(!controls.isEmpty()){
			controls.get(0).requestFocus();

		}
	}

}
